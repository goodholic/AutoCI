{
  "source": "github_patterns",
  "url": "https://github.com/jasontaylordev/CleanArchitecture",
  "type": "project_documentation",
  "content": "# Clean Architecture Solution Template\r\n\r\n[![Build](https://github.com/jasontaylordev/CleanArchitecture/actions/workflows/build.yml/badge.svg)](https://github.com/jasontaylordev/CleanArchitecture/actions/workflows/build.yml)\r\n[![CodeQL](https://github.com/jasontaylordev/CleanArchitecture/actions/workflows/codeql.yml/badge.svg)](https://github.com/jasontaylordev/CleanArchitecture/actions/workflows/codeql.yml)\r\n[![Nuget](https://img.shields.io/nuget/v/Clean.Architecture.Solution.Template?label=NuGet)](https://www.nuget.org/packages/Clean.Architecture.Solution.Template)\r\n[![Nuget](https://img.shields.io/nuget/dt/Clean.Architecture.Solution.Template?label=Downloads)](https://www.nuget.org/packages/Clean.Architecture.Solution.Template)\r\n![Twitter Follow](https://img.shields.io/twitter/follow/jasontaylordev?label=Follow&style=social)\r\n\r\nThe goal of this template is to provide a straightforward and efficient approach to enterprise application development, leveraging the power of Clean Architecture and ASP.NET Core. Using this template, you can effortlessly create a Single Page App (SPA) with ASP.NET Core and Angular or React, while adhering to the principles of Clean Architecture. Getting started is easy - simply install the **.NET template** (see below for full details).\r\n\r\nIf you find this project useful, please give it a star. Thanks! ‚≠ê\r\n\r\n## Getting Started\r\n\r\nThe following prerequisites are required to build and run the solution:\r\n\r\n- [.NET 9.0 SDK](https://dotnet.microsoft.com/download/dotnet/9.0) (latest version)\r\n- [Node.js](https://nodejs.org/) (latest LTS, only required if you are using Angular or React)\r\n\r\nThe easiest way to get started is to install the [.NET template](https://www.nuget.org/packages/Clean.Architecture.Solution.Template):\r\n```\r\ndotnet new install Clean.Architecture.Solution.Template\r\n```\r\n\r\nOnce installed, create a new solution using the template. You can choose to use Angular, React, or create a Web API-only solution. Specify the client framework using the `-cf` or `--client-framework` option, and provide the output directory where your project will be created. Here are some examples:\r\n\r\nTo create a Single-Page Application (SPA) with Angular and ASP.NET Core:\r\n```bash\r\ndotnet new ca-sln --client-framework Angular --output YourProjectName\r\n```\r\n\r\nTo create a SPA with React and ASP.NET Core:\r\n```bash\r\ndotnet new ca-sln -cf React -o YourProjectName\r\n```\r\n\r\nTo create a ASP.NET Core Web API-only solution:\r\n```bash\r\ndotnet new ca-sln -cf None -o YourProjectName\r\n```\r\n\r\nLaunch the app:\r\n```bash\r\ncd src/Web\r\ndotnet run\r\n```\r\n\r\nTo learn more, run the following command:\r\n```bash\r\ndotnet new ca-sln --help\r\n```\r\n\r\nYou can create use cases (commands or queries) by navigating to `./src/Application` and running `dotnet new ca-usecase`. Here are some examples:\r\n\r\nTo create a new command:\r\n```bash\r\ndotnet new ca-usecase --name CreateTodoList --feature-name TodoLists --usecase-type command --return-type int\r\n```\r\n\r\nTo create a query:\r\n```bash\r\ndotnet new ca-usecase -n GetTodos -fn TodoLists -ut query -rt TodosVm\r\n```\r\n\r\nTo learn more, run the following command:\r\n```bash\r\ndotnet new ca-usecase --help\r\n```\r\n\r\n## Database\r\n\r\nThe template supports [PostgresSQL](https://www.postgresql.org), [SQLite](https://www.sqlite.org/), and [SQL Server](https://learn.microsoft.com/en-us/sql/sql-server/what-is-sql-server) (default option). Specify the database to use with the `--database` option:\r\n\r\n```bash\r\ndotnet new ca-sln --database [postgresql|sqlite|sqlserver]\r\n```\r\n\r\nWhen you run the application, the database will be automatically created (if necessary) and the latest migrations will be applied.\r\n\r\nRunning database migrations is easy. Ensure you add the following flags to your command (values assume you are executing from repository root)\r\n\r\n* `--project src/Infrastructure` (optional if in this folder)\r\n* `--startup-project src/Web`\r\n* `--output-dir Data/Migrations`\r\n\r\nFor example, to add a new migration from the root folder:\r\n\r\n `dotnet ef migrations add \"SampleMigration\" --project src\\Infrastructure --startup-project src\\Web --output-dir Data\\Migrations`\r\n\r\n## Deploy\r\n\r\nThis template is structured to follow the Azure Developer CLI (azd). You can learn more about `azd` in the [official documentation](https://learn.microsoft.com/en-us/azure/developer/azure-developer-cli). To get started:\r\n\r\n```bash\r\n# Log in to Azure\r\nazd auth login\r\n\r\n# Provision and deploy to Azure\r\nazd up\r\n```\r\n\r\n## Technologies\r\n\r\n* [ASP.NET Core 9](https://docs.microsoft.com/en-us/aspnet/core/introduction-to-aspnet-core)\r\n* [Entity Framework Core 9](https://docs.microsoft.com/en-us/ef/core/)\r\n* [Angular 18](https://angular.dev/) or [React 18](https://react.dev/)\r\n* [MediatR](https://github.com/jbogard/MediatR)\r\n* [AutoMapper](https://automapper.org/)\r\n* [FluentValidation](https://fluentvalidation.net/)\r\n* [NUnit](https://nunit.org/), [FluentAssertions](https://fluentassertions.com/), [Moq](https://github.com/devlooped/moq) & [Respawn](https://github.com/jbogard/Respawn)\r\n\r\n## Versions\r\nThe main branch is now on .NET 9.0. The following previous versions are available:\r\n\r\n* [8.0](https://github.com/jasontaylordev/CleanArchitecture/tree/net8.0)\r\n* [7.0](https://github.com/jasontaylordev/CleanArchitecture/tree/net7.0)\r\n* [6.0](https://github.com/jasontaylordev/CleanArchitecture/tree/net6.0)\r\n* [5.0](https://github.com/jasontaylordev/CleanArchitecture/tree/net5.0)\r\n* [3.1](https://github.com/jasontaylordev/CleanArchitecture/tree/netcore3.1)\r\n\r\n## Learn More\r\n\r\n* [Clean Architecture with ASP.NET Core 3.0 (GOTO 2019)](https://youtu.be/dK4Yb6-LxAk)\r\n* [Clean Architecture with .NET Core: Getting Started](https://jasontaylor.dev/clean-architecture-getting-started/)\r\n\r\n## Support\r\n\r\nIf you are having problems, please let me know by [raising a new issue](https://github.com/jasontaylordev/CleanArchitecture/issues/new/choose).\r\n\r\n## License\r\n\r\nThis project is licensed with the [MIT license](LICENSE).\r\n",
  "stars": 18410,
  "timestamp": "2025-06-27T00:14:13.353433",
  "category": "advanced_patterns"
}