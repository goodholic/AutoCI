{
  "source": "github_patterns",
  "url": "https://github.com/phongnguyend/Practical.CleanArchitecture",
  "type": "project_documentation",
  "content": "#\n> :warning: **Warning**\n> \n> The code samples contain multiple ways and patterns to do things and not always be considered best practices or recommended for all situations.\n#\n\n# Database Centric vs Domain Centric Architecture \n![alt text](/docs/imgs/database-centrics-vs-domain-centric-architecture.png)\n\n[*(open on draw.io)*](https://www.draw.io/#Uhttps%3A%2F%2Fraw.githubusercontent.com%2Fphongnguyend%2FPractical.CleanArchitecture%2Fmaster%2Fdocs%2Fimgs%2Fdatabase-centrics-vs-domain-centric-architecture.drawio)\n\n# Hexagonal Architecture\n![alt text](/docs/imgs/hexagonal-architecture.png)\n\n[*(open on draw.io)*](https://www.draw.io/#Uhttps%3A%2F%2Fraw.githubusercontent.com%2Fphongnguyend%2FPractical.CleanArchitecture%2Fmaster%2Fdocs%2Fimgs%2Fhexagonal-architecture.drawio)\n\n# Onion Architecture\n![alt text](/docs/imgs/onion-architecture.png)\n\n[*(open on draw.io)*](https://www.draw.io/#Uhttps%3A%2F%2Fraw.githubusercontent.com%2Fphongnguyend%2FPractical.CleanArchitecture%2Fmaster%2Fdocs%2Fimgs%2Fonion-architecture.drawio)\n\n# The Clean Architecture\n![alt text](/docs/imgs/the-clean-architecture.png)\n\n[*(open on draw.io)*](https://www.draw.io/#Uhttps%3A%2F%2Fraw.githubusercontent.com%2Fphongnguyend%2FPractical.CleanArchitecture%2Fmaster%2Fdocs%2Fimgs%2Fthe-clean-architecture.drawio)\n\n# Classic Three-layer Architecture\n![alt text](/docs/imgs/classic-three-layer-architecture.png)\n\n[*(open on draw.io)*](https://www.draw.io/#Uhttps%3A%2F%2Fraw.githubusercontent.com%2Fphongnguyend%2FPractical.CleanArchitecture%2Fmaster%2Fdocs%2Fimgs%2Fclassic-three-layer-architecture.drawio)\n\n# Modern Four-layer Architecture\n![alt text](/docs/imgs/modern-four-layer-architecture.png)\n\n[*(open on draw.io)*](https://www.draw.io/#Uhttps%3A%2F%2Fraw.githubusercontent.com%2Fphongnguyend%2FPractical.CleanArchitecture%2Fmaster%2Fdocs%2Fimgs%2Fmodern-four-layer-architecture.drawio)\n\n# Layer Dependencies\n![alt text](/docs/imgs/layer-dependencies.png)\n\n[*(open on draw.io)*](https://www.draw.io/#Uhttps%3A%2F%2Fraw.githubusercontent.com%2Fphongnguyend%2FPractical.CleanArchitecture%2Fmaster%2Fdocs%2Fimgs%2Flayer-dependencies.drawio)\n\n# Layer Examples\n![alt text](/docs/imgs/layer-examples.png)\n\n[*(open on draw.io)*](https://www.draw.io/#Uhttps%3A%2F%2Fraw.githubusercontent.com%2Fphongnguyend%2FPractical.CleanArchitecture%2Fmaster%2Fdocs%2Fimgs%2Flayer-examples.drawio)\n\n# Testing Pyramid\n![alt text](/docs/imgs/testing-pyramid.png)\n![alt text](/docs/imgs/testing-pyramid-unit-tests.png)\n![alt text](/docs/imgs/testing-pyramid-integration-e2e-tests.png)\n\n[*(open on draw.io)*](https://www.draw.io/#Uhttps%3A%2F%2Fraw.githubusercontent.com%2Fphongnguyend%2FPractical.CleanArchitecture%2Fmaster%2Fdocs%2Fimgs%2Ftesting-pyramid.drawio)\n\n# Vertical Slice Architecture (Modular Monolith)\n![alt text](/docs/imgs/vertical-slice-architecture.png)\n\n[*(open on draw.io)*](https://www.draw.io/#Uhttps%3A%2F%2Fraw.githubusercontent.com%2Fphongnguyend%2FPractical.CleanArchitecture%2Fmaster%2Fdocs%2Fimgs%2Fvertical-slice-architecture.drawio)\n\n# Solution Structure\n![alt text](/docs/imgs/code-solution-structure.png)\n\n![alt text](/docs/imgs/code-solution-structure-modular-monolith.png)\n\n![alt text](/docs/imgs/code-solution-structure-microservices.png)\n\n# How to Run:\n## Update Configuration\n<details>\n  <summary><b>Additional Configuration Sources</b></summary>\n  \n  - Open [ClassifiedAds.WebMVC/appsettings.json](/src/Monolith/ClassifiedAds.WebMVC/appsettings.json) and jump to **ConfigurationSources** section.\n    ```js\n    \"ConfigurationSources\": {\n      \"SqlServer\": {\n        \"IsEnabled\": false,\n        \"ConnectionString\": \"Server=127.0.0.1;Database=ClassifiedAds;User Id=sa;Password=sqladmin123!@#\",\n        \"SqlQuery\": \"select [Key], [Value] from ConfigurationEntries\"\n      },\n      \"AzureKeyVault\": {\n        \"IsEnabled\": false,\n        \"VaultName\": \"https://xxx.vault.azure.net/\"\n      }\n    },\n    ```\n\n  - Get from Sql Server database:\n    ```js\n    \"ConfigurationSources\": {\n      \"SqlServer\": {\n        \"IsEnabled\": true,\n        \"ConnectionString\": \"Server=127.0.0.1;Database=ClassifiedAds;User Id=sa;Password=sqladmin123!@#\",\n        \"SqlQuery\": \"select [Key], [Value] from ConfigurationEntries\"\n      },\n    },\n    ```\n\n  - Get from Azure Key Vault:\n    ```js\n    \"ConfigurationSources\": {\n      \"AzureKeyVault\": {\n        \"IsEnabled\": true,\n        \"VaultName\": \"https://xxx.vault.azure.net/\"\n      }\n    },\n    ```\n\n  - Use Both:\n    ```js\n    \"ConfigurationSources\": {\n      \"SqlServer\": {\n        \"IsEnabled\": true,\n        \"ConnectionString\": \"Server=127.0.0.1;Database=ClassifiedAds;User Id=sa;Password=sqladmin123!@#\",\n        \"SqlQuery\": \"select [Key], [Value] from ConfigurationEntries\"\n      },\n      \"AzureKeyVault\": {\n        \"IsEnabled\": true,\n        \"VaultName\": \"https://xxx.vault.azure.net/\"\n      }\n    },\n    ```\n</details>\n\n<details>\n  <summary><b>Storage</b></summary>\n  \n  - Open [ClassifiedAds.WebMVC/appsettings.json](/src/Monolith/ClassifiedAds.WebMVC/appsettings.json), [ClassifiedAds.WebAPI/appsettings.json](/src/Monolith/ClassifiedAds.WebAPI/appsettings.json) and jump to **Storage** section.\n    ```js\n    \"Storage\": {\n      \"Provider\": \"Local\",\n    },\n    ```\n\n  - Use Local Files:\n    ```js\n    \"Storage\": {\n      \"Provider\": \"Local\",\n      \"Local\": {\n        \"Path\": \"E:\\\\files\"\n      },\n    },\n    ```\n\n  - Use Azure Blob:\n    ```js\n    \"Storage\": {\n      \"Provider\": \"Azure\",\n      \"Azure\": {\n        \"ConnectionString\": \"xxx\",\n        \"Container\": \"classifiedadds\"\n      },\n    },\n    ```\n\n  - Use Amazon S3:\n    ```js\n    \"Storage\": {\n      \"Provider\": \"Amazon\",\n      \"Amazon\": {\n        \"AccessKeyID\": \"xxx\",\n        \"SecretAccessKey\": \"xxx\",\n        \"BucketName\": \"classifiedadds\",\n        \"RegionEndpoint\": \"ap-southeast-1\"\n      }\n    },\n    ```\n</details>\n\n<details>\n  <summary><b>Message Broker</b></summary>\n  \n  - Open below files and jump to **Messaging** section:\n    + [ClassifiedAds.Background/appsettings.json](/src/Monolith/ClassifiedAds.Background/appsettings.json)\n    ```js\n    \"Messaging\": {\n      \"Provider\": \"RabbitMQ\",\n    }\n    ```\n\n  - Use RabbitMQ\n    ```js\n    \"Messaging\": {\n      \"Provider\": \"RabbitMQ\",\n      \"RabbitMQ\": {\n        \"HostName\": \"localhost\",\n        \"UserName\": \"guest\",\n        \"Password\": \"guest\",\n        \"ExchangeName\": \"amq.direct\",\n        \"RoutingKeys\": {\n          \"FileUploadedEvent\": \"classifiedadds_fileuploaded\",\n          \"FileDeletedEvent\": \"classifiedadds_filedeleted\",\n          \"EmailMessageCreatedEvent\": \"classifiedadds_emailcreated\",\n          \"SmsMessageCreatedEvent\": \"classifiedadds_smscreated\"\n        },\n        \"QueueNames\": {\n          \"FileUploadedEvent\": \"classifiedadds_fileuploaded\",\n          \"FileDeletedEvent\": \"classifiedadds_filedeleted\",\n          \"EmailMessageCreatedEvent\": \"classifiedadds_emailcreated\",\n          \"SmsMessageCreatedEvent\": \"classifiedadds_smscreated\"\n        }\n      }\n    }\n    ```\n\n  - Use Kafka:\n    ```js\n    \"Messaging\": {\n      \"Provider\": \"Kafka\",\n      \"Kafka\": {\n        \"BootstrapServers\": \"localhost:9092\",\n        \"Topics\": {\n          \"FileUploadedEvent\": \"classifiedadds_fileuploaded\",\n          \"FileDeletedEvent\": \"classifiedadds_filedeleted\",\n          \"EmailMessageCreatedEvent\": \"classifiedadds_emailcreated\",\n          \"SmsMessageCreatedEvent\": \"classifiedadds_smscreated\"\n        },\n      }\n    }\n    ```\n\n  - Use Azure Queue Storage:\n    ```js\n    \"Messaging\": {\n      \"Provider\": \"AzureQueue\",\n      \"AzureQueue\": {\n        \"ConnectionString\": \"xxx\",\n        \"QueueNames\": {\n          \"FileUploadedEvent\": \"classifiedadds-fileuploaded\",\n          \"FileDeletedEvent\": \"classifiedadds-filedeleted\",\n          \"EmailMessageCreatedEvent\": \"classifiedadds-emailcreated\",\n          \"SmsMessageCreatedEvent\": \"classifiedadds-smscreated\"\n        }\n      }\n    }\n    ```\n\n  - Use Azure Service Bus:\n    ```js\n    \"Messaging\": {\n      \"Provider\": \"AzureServiceBus\",\n      \"AzureServiceBus\": {\n        \"ConnectionString\": \"xxx\",\n        \"QueueNames\": {\n          \"FileUploadedEvent\": \"classifiedadds_fileuploaded\",\n          \"FileDeletedEvent\": \"classifiedadds_filedeleted\",\n          \"EmailMessageCreatedEvent\": \"classifiedadds_emailcreated\",\n          \"SmsMessageCreatedEvent\": \"classifiedadds_smscreated\"\n        }\n      }\n    }\n    ```\n</details>\n\n<details>\n  <summary><b>Logging</b></summary>\n  \n  - Open and jump to **Logging** section of below files:\n    + [ClassifiedAds.WebAPI/appsettings.json](/src/Monolith/ClassifiedAds.WebAPI/appsettings.json)\n    + [ClassifiedAds.WebMVC/appsettings.json](/src/Monolith/ClassifiedAds.WebMVC/appsettings.json)\n    + [ClassifiedAds.Background/appsettings.json](/src/Monolith/ClassifiedAds.Background/appsettings.json)\n    ```js\n    \"Logging\": {\n      \"LogLevel\": {\n        \"Default\": \"Warning\"\n      },\n      \"File\": {\n        \"MinimumLogEventLevel\": \"Information\"\n      },\n      \"Elasticsearch\": {\n        \"IsEnabled\": false,\n        \"Host\": \"http://localhost:9200\",\n        \"IndexFormat\": \"classifiedads\",\n        \"MinimumLogEventLevel\": \"Information\"\n      },\n      \"EventLog\": {\n        \"IsEnabled\": false,\n        \"LogName\": \"Application\",\n        \"SourceName\": \"ClassifiedAds.WebAPI\"\n      }\n    },\n    ```\n  - Write to Local file (./logs/log.txt). Always enabled.\n    ```js\n    \"Logging\": {\n      \"File\": {\n        \"MinimumLogEventLevel\": \"Information\"\n      },\n    },\n    ```\n  - Write to Elasticsearch:\n    ```js\n    \"Logging\": {\n      \"Elasticsearch\": {\n        \"IsEnabled\": true,\n        \"Host\": \"http://localhost:9200\",\n        \"IndexFormat\": \"classifiedads\",\n        \"MinimumLogEventLevel\": \"Information\"\n      },\n    },\n    ```\n  - Write to Windows Event Log (Windows only):\n    ```js\n    \"Logging\": {\n      \"EventLog\": {\n        \"IsEnabled\": true,\n        \"LogName\": \"Application\",\n        \"SourceName\": \"ClassifiedAds.WebAPI\"\n      }\n    },\n    ```\n  - Enable all options:\n    ```js\n    \"Logging\": {\n      \"LogLevel\": {\n        \"Default\": \"Warning\"\n      },\t\n      \"File\": {\n        \"MinimumLogEventLevel\": \"Information\"\n      },\n      \"Elasticsearch\": {\n        \"IsEnabled\": true,\n        \"Host\": \"http://localhost:9200\",\n        \"IndexFormat\": \"classifiedads\",\n        \"MinimumLogEventLevel\": \"Information\"\n      },\n      \"EventLog\": {\n        \"IsEnabled\": true,\n        \"LogName\": \"Application\",\n        \"SourceName\": \"ClassifiedAds.WebAPI\"\n      }\n    },\n    ```\n</details>\n\n<details>\n  <summary><b>Caching</b></summary>\n  \n  - Open and jump to **Caching** section of below files:\n    + [ClassifiedAds.WebAPI/appsettings.json](/src/Monolith/ClassifiedAds.WebAPI/appsettings.json)\n    + [ClassifiedAds.WebMVC/appsettings.json](/src/Monolith/ClassifiedAds.WebMVC/appsettings.json)\n    ```js\n    \"Caching\": {\n      \"InMemory\": {\n\n      },\n      \"Distributed\": {\n\n      }\n    },\n    ```\n  - Configure options for In Memory Cache:\n    ```js\n    \"Caching\": {\n      \"InMemory\": {\n        \"SizeLimit\": null\n      },\n    },\n    ```\n  - Use In Memory Distributed Cache (For Local Testing):\n    ```js\n    \"Caching\": {\n      \"Distributed\": {\n        \"Provider\": \"InMemory\",\n        \"InMemory\": {\n          \"SizeLimit\": null\n        }\n      }\n    },\n    ```\n  - Use Redis Distributed Cache:\n    ```js\n    \"Caching\": {\n      \"Distributed\": {\n        \"Provider\": \"Redis\",\n        \"Redis\": {\n          \"Configuration\": \"xxx.redis.cache.windows.net:6380,password=xxx,ssl=True,abortConnect=False\",\n          \"InstanceName\": \"\"\n        }\n      }\n    },\n    ```\n  - Use Sql Server Distributed Cache:\n    ```js\n\tdotnet tool install --global dotnet-sql-cache --version=\"5.0\"\n\tdotnet sql-cache create \"Server=127.0.0.1;Database=ClassifiedAds;User Id=sa;Password=sqladmin123!@#\" dbo CacheEntries\n    ```\n    ```js\n    \"Caching\": {\n      \"Distributed\": {\n        \"Provider\": \"SqlServer\",\n        \"SqlServer\": {\n          \"ConnectionString\": \"Server=127.0.0.1;Database=ClassifiedAds;User Id=sa;Password=sqladmin123!@#\",\n          \"SchemaName\": \"dbo\",\n          \"TableName\": \"CacheEntries\"\n        }\n      }\n    },\n    ```\n</details>\n\n<details>\n  <summary><b>Monitoring</b></summary>\n  \n  - Open and jump to **Monitoring** section of below files:\n    + [ClassifiedAds.WebAPI/appsettings.json](/src/Monolith/ClassifiedAds.WebAPI/appsettings.json)\n    + [ClassifiedAds.WebMVC/appsettings.json](/src/Monolith/ClassifiedAds.WebMVC/appsettings.json)\n    ```js\n    \"Monitoring\": {\n\n    },\n    ```\n  - Use Azure Application Insights:\n    ```js\n\t\"Monitoring\": {\n      \"AzureApplicationInsights\": {\n        \"IsEnabled\": true,\n        \"InstrumentationKey\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n        \"EnableSqlCommandTextInstrumentation\": true\n      }\n\t},\n    ```\n  - Use OpenTelemetry:\n    ```js\n    \"Monitoring\": {\n      \"OpenTelemetry\": {\n        \"IsEnabled\": true,\n        \"ServiceName\": \"ClassifiedAds.WebAPI\",\n        \"TraceEnabled\": true,\n        \"MetricEnabled\": true,\n        \"Otlp\": {\n          \"IsEnabled\": false,\n          \"Endpoint\": \"http://localhost:4317\"\n        }\n      }\n    },\n    ```\n  - Use Both:\n    ```js\n    \"Monitoring\": {\n      \"AzureApplicationInsights\": {\n        \"IsEnabled\": true,\n        \"InstrumentationKey\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\",\n        \"EnableSqlCommandTextInstrumentation\": true\n      },\n      \"OpenTelemetry\": {\n        \"IsEnabled\": true,\n        \"ServiceName\": \"ClassifiedAds.WebAPI\",\n        \"TraceEnabled\": true,\n        \"MetricEnabled\": true,\n        \"Otlp\": {\n          \"IsEnabled\": false,\n          \"Endpoint\": \"http://localhost:4317\"\n        }\n      }\n    },\n    ```\n</details>\n\n<details>\n  <summary><b>Interceptors</b></summary>\n  \n  - Open and jump to **Interceptors** section of below files:\n    + [ClassifiedAds.WebAPI/appsettings.json](/src/Monolith/ClassifiedAds.WebAPI/appsettings.json)\n    + [ClassifiedAds.WebMVC/appsettings.json](/src/Monolith/ClassifiedAds.WebMVC/appsettings.json)\n    + [ClassifiedAds.Background/appsettings.json](/src/Monolith/ClassifiedAds.Background/appsettings.json)\n    ```js\n    \"Interceptors\": {\n      \"LoggingInterceptor\": true,\n      \"ErrorCatchingInterceptor\": false\n    },\n    ```\n</details>\n\n<details>\n  <summary><b>Security Headers</b></summary>\n  \n  - Open [ClassifiedAds.WebAPI/appsettings.json](/src/Monolith/ClassifiedAds.WebAPI/appsettings.json) and jump to **SecurityHeaders** section:\n    ```js\n    \"SecurityHeaders\": {\n      \"Cache-Control\": \"no-cache, no-store, must-revalidate\",\n      \"Pragma\": \"no-cache\",\n      \"Expires\": \"0\"\n    },\n    ```\n  - Open [ClassifiedAds.WebMVC/appsettings.json](/src/Monolith/ClassifiedAds.WebMVC/appsettings.json) and jump to **SecurityHeaders** section:\n    ```js\n    \"SecurityHeaders\": {\n      \"Content-Security-Policy\": \"form-action 'self'; frame-ancestors 'none'\",\n      \"Feature-Policy\": \"camera 'none'\",\n      \"Referrer-Policy\": \"strict-origin-when-cross-origin\",\n      \"X-Content-Type-Options\": \"nosniff\",\n      \"X-Frame-Options\": \"DENY\",\n      \"X-XSS-Protection\": \"1; mode=block\",\n      \"Cache-Control\": \"no-cache, no-store, must-revalidate\",\n      \"Pragma\": \"no-cache\",\n      \"Expires\": \"0\"\n    },\n    ```\n</details>\n\n<details>\n  <summary><b>Cross-Origin Resource Sharing (CORS)</b></summary>\n  \n  - Open [ClassifiedAds.WebAPI/appsettings.json](/src/Monolith/ClassifiedAds.WebAPI/appsettings.json) and jump to **CORS** section:\n    ```js\n    \"CORS\": {\n      \"AllowAnyOrigin\": false,\n      \"AllowedOrigins\": [ \"http://localhost:4200\", \"http://localhost:3000\", \"http://localhost:8080\" ]\n    },\n    ```\n</details>\n\n<details>\n  <summary><b>External Login</b></summary>\n  \n  - Open [ClassifiedAds.IdentityServer/appsettings.json](/src/Monolith/ClassifiedAds.IdentityServer/appsettings.json) and jump to **ExternalLogin** section:\n    ```js\n    \"ExternalLogin\": {\n      \"AzureActiveDirectory\": {\n        \"IsEnabled\": true,\n        \"Authority\": \"https://login.microsoftonline.com/<Directory (tenant) ID>\",\n        \"ClientId\": \"<Application (client) ID\",\n        \"ClientSecret\": \"xxx\"\n      },\n      \"Microsoft\": {\n        \"IsEnabled\": true,\n        \"ClientId\": \"<Application (client) ID\",\n        \"ClientSecret\": \"xxx\"\n      },\n      \"Google\": {\n        \"IsEnabled\": true,\n        \"ClientId\": \"xxx\",\n        \"ClientSecret\": \"xxx\"\n      },\n      \"Facebook\": {\n        \"IsEnabled\": true,\n        \"AppId\": \"xxx\",\n        \"AppSecret\": \"xxx\"\n      }\n    },\n    ```\n</details>\n\n<details>\n  <summary><b>Sending Email</b></summary>\n  \n  - Open [ClassifiedAds.Background/appsettings.json](/src/Monolith/ClassifiedAds.Background/appsettings.json) and jump to **Notification -> Email** section:\n    ```js\n    \"Notification\": {\n      \"Email\": {\n        \"Provider\": \"Fake\",\n      }\n    }\n    ```\n  - Use SmtpClient:\n    ```js\n    \"Notification\": {\n      \"Email\": {\n        \"Provider\": \"SmtpClient\",\n        \"SmtpClient\": {\n          \"Host\": \"localhost\",\n          \"Port\": \"\",\n          \"UserName\": \"\",\n          \"Password\": \"\",\n          \"EnableSsl\": \"\"\n        }\n      }\n    }\n    ```\n</details>\n\n<details>\n  <summary><b>Sending SMS</b></summary>\n  \n  - Open [ClassifiedAds.Background/appsettings.json](/src/Monolith/ClassifiedAds.Background/appsettings.json) and jump to **Notification -> Sms** section:\n    ```js\n    \"Notification\": {\n      \"Sms\": {\n        \"Provider\": \"Fake\",\n      }\n    }\n    ```\n  - Use Twilio\n    ```js\n    \"Notification\": {\n      \"Sms\": {\n        \"Provider\": \"Twilio\",\n        \"Twilio\": {\n          \"AccountSId\": \"\",\n          \"AuthToken\": \"\",\n          \"FromNumber\": \"\"\n        }\n      }\n    }\n    ```\n</details>\n\n## Run or Debug the Solution\n- Web MVC Home Page: https://localhost:44364/\n\n  ![alt text](/docs/imgs/web-mvc-home-page.png)\n\n- Navigate to Health Checks UI https://localhost:44364/healthchecks-ui#/healthchecks and make sure everything is green.\n\n  ![alt text](/docs/imgs/health-checks-ui.png)\n\n- Login on Identity Server:\n  + Option 1: Use default created account:\n    + User Name: phong@gmail.com\n    + Password: v*7Un8b4rcN@<-RN\n  + Option 2: Register new account at https://localhost:44367/Account/Register\n  \n  ![alt text](/docs/imgs/identity-server-login-page.png)\n\n- Open Blazor Home Page at: https://localhost:44331\n\n  ![alt text](/docs/imgs/blazor-home-page.png)\n\n## How to Build and Run Single Page Applications:\n- Angular:\n  + Navigate to folder: [UIs/angular/](/src/UIs/angular/)\n    ```\n    npm install\n    ng serve\n    ```\n  + Update [environment.ts](/src/UIs/angular/src/environments/environment.ts) & [environment.prod.ts](/src/UIs/angular/src/environments/environment.prod.ts) \n    ```ts\n    export const environment = {\n      OpenIdConnect: {\n        Authority: \"https://localhost:44367\",\n        ClientId: \"ClassifiedAds.Angular\"\n      },\n      ResourceServer: {\n        Endpoint: \"https://localhost:44312/api/\"\n      },\n      CurrentUrl: \"http://localhost:4200/\"\n    };\n    ```\n  + Go to http://localhost:4200/\n\n    ![alt text](/docs/imgs/angular-home-page.png)\n  \n- React:\n  + Navigate to folder: [UIs/reactjs/](/src/UIs/reactjs/)\n    ```\n    npm install\n    npm run dev\n    ```\n  + Update [environment.dev.tsx](/src/UIs/reactjs/src/environments/environment.dev.tsx) & [environment.tsx](/src/UIs/reactjs/src/environments/environment.tsx) \n    ```js\n    const environment = {\n        OpenIdConnect: {\n            Authority: \"https://localhost:44367\",\n            ClientId: \"ClassifiedAds.React\"\n        },\n        ResourceServer: {\n            Endpoint: \"https://localhost:44312/api/\"\n        },\n        CurrentUrl: \"http://localhost:3000/\"\n    };\n    export default environment;\n    ```\n  + Go to http://localhost:3000/\n  \n    ![alt text](/docs/imgs/react-home-page.png)\n  \n- Vue:\n  + Navigate to folder: [UIs/vuejs/](/src/UIs/vuejs/)\n    ```\n    npm install\n    npm run dev\n    ```\n  + Update [environment.dev.ts](/src/UIs/vuejs/environments/environment.dev.ts) & [environment.dev.ts](/src/UIs/vuejs/environments/environment.ts) \n    ```js\n    const environment = {\n        OpenIdConnect: {\n            Authority: \"https://localhost:44367\",\n            ClientId: \"ClassifiedAds.Vue\"\n        },\n        ResourceServer: {\n            Endpoint: \"https://localhost:44312/api/\"\n        },\n        CurrentUrl: \"http://localhost:8080/\"\n    };\n    export default environment;\n    ```\n+ Go to http://localhost:8080/\n  \n    ![alt text](/docs/imgs/vue-home-page.png)\n\n- Before Login, go to Identity Server https://localhost:44367/Client to make sure application clients have been registered:\n\n  ![alt text](/docs/imgs/identity-server-clients-page.png)\n    \n## How to Run on Docker Containers:\n- Add Migrations if you haven't done on previous steps:\n  + Install **dotnet-ef** cli:\n    ```\n    dotnet tool install --global dotnet-ef --version=\"8.0\"\n    ```\n  + Navigate to [ClassifiedAds.Migrator](/src/Monolith/ClassifiedAds.Migrator/) and run these commands:\n    ```\n    dotnet ef migrations add Init --context AdsDbContext -o Migrations/AdsDb\n    ```\n- Navigate to [Monolith](/src/Monolith/) and run:\n  ```\n  docker compose build\n  docker compose up\n  ```\n- Open Web MVC Home Page at: http://host.docker.internal:9003\n\n  ![alt text](/docs/imgs/web-mvc-home-page.png)\n\n- Navigate to Health Checks UI http://host.docker.internal:9003/healthchecks-ui#/healthchecks and make sure everything is green.\n\n  ![alt text](/docs/imgs/health-checks-ui-container.png)\n\n- Login on Identity Server:\n  + Use default created account: phong@gmail.com / v*7Un8b4rcN@<-RN\n  + Register new account at http://host.docker.internal:9000/Account/Register\n  \n- Open Blazor Home Page at: http://host.docker.internal:9008\n\n  ![alt text](/docs/imgs/blazor-home-page.png)\n\n## How to Run Integration & End to End Tests:\n- Update [ClassifiedAds.IntegrationTests/appsettings.json](/src/Monolith/ClassifiedAds.IntegrationTests/appsettings.json)\n  ```js\n  {\n    \"OpenIdConnect\": {\n      \"Authority\": \"https://localhost:44367\",\n      \"ClientId\": \"ClassifiedAds.WebMVC\",\n      \"ClientSecret\": \"secret\",\n      \"RequireHttpsMetadata\": \"true\"\n    },\n    \"WebAPI\": {\n      \"Endpoint\": \"https://localhost:44312\"\n    },\n    \"Login\": {\n      \"UserName\": \"phong@gmail.com\",\n      \"Password\": \"v*7Un8b4rcN@<-RN\",\n      \"Scope\": \"ClassifiedAds.WebAPI\"\n    }\n  }\n  ```\n- Download [Chrome Driver](https://chromedriver.chromium.org/downloads)\n\n  ![alt text](/docs/imgs/chrome_driver_path.png)\n\n- Update [EndToEndTests/appsettings.json](/src/EndToEndTests/Selenium/appsettings.json)\n  ```js\n  {\n    \"ChromeDriverPath\": \"D:\\\\Downloads\\\\chromedriver_win32\\\\72\",\n    \"Login\": {\n      \"Url\": \"https://localhost:44364/Home/Login\",\n      \"UserName\": \"phong@gmail.com\",\n      \"Password\": \"v*7Un8b4rcN@<-RN\"\n    }\n  }\n  ```\n  \n  ![alt text](/docs/imgs/run_e2e_tests.gif)\n  \n## Application URLs:\n\nhttps://github.com/phongnguyend/Practical.CleanArchitecture/wiki/Application-URLs\n\n## Roadmap:\n\nhttps://github.com/phongnguyend/Practical.CleanArchitecture/wiki/Roadmap\n\n##\n\n## Licence 🔑\n\nThis repository is licensed under the [MIT](/LICENSE) license.\n\n### Duende.IdentityServer License 🔑\n\n**Duende.IdentityServer** is available under both a **FOSS (RPL) and a commercial** license. \n\nFor the production environment, it is necessary to get a specific license, if you would like more information about the licensing of **Duende.IdentityServer** - please check [this link](https://duendesoftware.com/products/identityserver#pricing).\n\nThe source code under [/src/IdentityServer/Duende](/src/IdentityServer/Duende) folder uses the source code from https://github.com/DuendeSoftware/IdentityServer.Quickstart.UI which is under the terms of the following\n[**license**](https://github.com/DuendeSoftware/IdentityServer.Quickstart.UI/blob/main/LICENSE).\n\n##\n",
  "stars": 2282,
  "timestamp": "2025-06-27T00:14:22.363820",
  "category": "advanced_patterns"
}