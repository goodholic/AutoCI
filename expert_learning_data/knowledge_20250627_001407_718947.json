{
  "source": "stackoverflow_expert",
  "url": "https://stackoverflow.com/questions/365615",
  "type": "expert_qa",
  "content": "Q: In .NET, which loop runs faster, &#39;for&#39; or &#39;foreach&#39;?\n\nA: <p>In <code>C#/VB.NET/.NET,</code> which loop runs faster, <code>for</code> or <code>foreach</code>?</p>\n<p>Ever since I read that a <code>for</code> loop works faster than a <code>foreach</code> loop a <a href=\"https://learn.microsoft.com/previous-versions/dotnet/articles/ms973839(v=msdn.10)\" rel=\"noreferrer\">long time ago</a> I assumed it stood true for all collections, <code>generic collections</code>, all <code>arrays</code>, etc.</p>\n<p>I scoured Google and found a few articles, but most of them are inconclusive (read comments on the articles) and open ended.</p>\n<p>What would be ideal is to have each scenario listed and the best solution for the same.</p>\n<p>For example (just an example of how it should be):</p>\n<ol>\n<li>for iterating an <code>array</code> of 1000+\nstrings - <code>for</code> is better than <code>foreach</code></li>\n<li>for iterating over <code>IList</code> (non generic) strings - <code>foreach</code> is better\nthan <code>for</code></li>\n</ol>\n<p>A few references found on the web for the same:</p>\n<ol>\n<li><a href=\"https://learn.microsoft.com/previous-versions/dotnet/articles/ms973839(v=msdn.10)\" rel=\"noreferrer\">Original grand old article by  Emmanuel Schanzer</a></li>\n<li><a href=\"https://www.codeproject.com/KB/cs/foreach.aspx\" rel=\"noreferrer\">CodeProject FOREACH Vs. FOR</a></li>\n<li><a href=\"https://learn.microsoft.com/archive/blogs/kevin_ransom/to-foreach-or-not-to-foreach-that-is-the-question\" rel=\"noreferrer\">Blog - To <code>foreach</code> or not to <code>foreach</code>, that is the question</a></li>\n<li><a href=\"https://web.archive.org/web/20100123104946/http://weblogs.asp.net/mdavey/archive/2004/02/25/79504.aspx\" rel=\"noreferrer\">ASP.NET forum - NET 1.1 C# <code>for</code> vs <code>foreach</code></a></li>\n</ol>\n \n<p>[Edit]</p>\n<p>Apart from the readability aspect of it, I am really interested in facts and figures. There are applications where the last mile of performance optimization squeezed do matter. </p>\n",
  "score": 453,
  "timestamp": "2025-06-27T00:14:07.718929",
  "category": "expert_solutions"
}