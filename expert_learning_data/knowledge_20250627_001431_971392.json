{
  "source": "github_patterns",
  "url": "https://github.com/bombomby/optick",
  "type": "project_documentation",
  "content": "# [Optick: C++ Profiler For Games](https://optick.dev)\n![GitHub](https://img.shields.io/github/license/bombomby/optick.svg) ![GitHub release](https://img.shields.io/github/release/bombomby/optick.svg) <br/>\n![](https://optick.dev/images/screenshots/optick/Optick.png)\nOptick is a super-lightweight C++ profiler for Games.<br/>\nIt provides access for all the necessary tools required for efficient performance analysis and optimization:<br/>\ninstrumentation, switch-contexts, sampling, GPU counters.<br/>\n> Looking for 'Brofiler'? It has been renamed to 'Optick', so you are in the right place.\n## Build Status\n| Windows (x64: msvc) | Linux (x64: clang, gcc) | MacOS (x64: clang, gcc) | Static Code Analysis |\n| ------- | ----- | ----- | --------------------- |\n| [![Windows Build status](https://ci.appveyor.com/api/projects/status/bu5smbuh1d2lcsf6?svg=true)](https://ci.appveyor.com/project/bombomby/optick) | [![Linux+MacOS Build Status](https://travis-ci.org/bombomby/optick.svg)](https://travis-ci.org/bombomby/optick) | [![Linux+MacOS Build Status](https://travis-ci.org/bombomby/optick.svg)](https://travis-ci.org/bombomby/optick) | [![Total alerts](https://img.shields.io/lgtm/alerts/g/bombomby/optick.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/bombomby/optick/alerts/) [![Codacy Badge](https://api.codacy.com/project/badge/Grade/3195c1fa7d554dc1bb9d45dd30454b48)](https://www.codacy.com/app/bombomby/optick?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=bombomby/optick&amp;utm_campaign=Badge_Grade) |\n\n| Features | Windows | Linux | MacOS | XBox | PS4 | UE4 |\n| -------- | ------- | ----- | ----- | ---- | --- | --- |\n| Instrumentation | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :heavy_check_mark: | :grey_question: | :heavy_check_mark: |\n| Switch Contexts | :heavy_check_mark: ETW | :heavy_check_mark: FTrace | :heavy_check_mark: DTrace | :heavy_check_mark: | :grey_question: | :heavy_check_mark: Win |\n| Sampling | :heavy_check_mark: ETW | | | :grey_question: | :grey_question: | :heavy_check_mark: Win |\n| GPU | :heavy_check_mark: D3D12, Vulkan | :heavy_check_mark: Vulkan | :heavy_check_mark: Vulkan | | | :hourglass_flowing_sand: |\n\n:heavy_check_mark: - works out of the box, :hourglass_flowing_sand: - in progress, :grey_question: - coming soon for the certified developers\n\n## List of Games and Studios using Optick(Brofiler)\n![Allods Team](https://optick.dev/images/studios/AllodsTeam_thumb2.png \"Allods Team\") ![4A Games](https://optick.dev/images/studios/4A_Games_thumb2.png \"4A Gaemes\") ![CryEngine](https://optick.dev/images/studios/CryEngine_thumb.png \"CryEngine\") ![Larian Studios](https://optick.dev/images/studios/Larian_png.png \"Larian Studios\")\n![Skyforge](https://optick.dev/images/studios/Skyforge_thumb.jpg \"Skyforge\") ![Metro Exodus](https://optick.dev/images/studios/Metro_thumb.jpg \"Metro Exodus\")  ![Warface](https://optick.dev/images/studios/Warface_thumb.jpg \"Metro Exodus\") ![Armored Warfare](https://optick.dev/images/studios/ArmoredWarfare_thumb.jpg \"Metro Exodus\")\n\n## Video Tutorial\n[![Optick Video Tutorial](https://github.com/bombomby/brofiler/blob/gh-pages/images/VideoThumbnail.jpg)](https://www.youtube.com/watch?v=p57TV5342fo)\n\n## Basic Integration (one line of code)\n1) Copy 'src' folder from the repository or latest release to your game project\n2) Add `OPTICK_FRAME(\"MainThread\");` macro to the main loop of your game and `#include \"optick.h\"` header\n```c++\n#include \"optick.h\"\n...\nwhile( true ) \n{\n\tOPTICK_FRAME(\"MainThread\");\n\tengine.Update();\n}\n```\n3) Use `OPTICK_EVENT();` macro to instrument a function\n```c++\nvoid SlowFunction()\n{ \n\tOPTICK_EVENT();\n\t...\n}\n```\n4) Add `OPTICK_THREAD(\"Name\");` macro to declare a new thread with Optick\n```c++\nvoid WorkerThread(...)\n{\n\tOPTICK_THREAD(\"Worker\");\n\twhile (isRunning)\n\t{\n\t\t...\n\t}\n}\n```\n5) Edit `optick.config.h` to enable/disable some of the features in specific configs or platforms.<br/>(e.g. disabling Optick in final builds)\n\n> :warning: If your Game uses **dynamic linking** and you are planning to **use Optick from multiple dlls** within the same executable - please make sure that Optick's code is added to the common **Dynamic Library** and this library is compiled with **OPTICK_EXPORT** define (Static Library won't work).<br/>\n> You could also use precompiled **OptickCore.dll** which is packaged with every release:\n> - Add `include` folder to the extra include dirs of your project\n> - Add `lib/x64/debug` and `lib/x64/release` to the extra library dirs of your project\n> - Copy `lib/x64/debug/OptickCore.dll` and `lib/x64/release/OptickCore.dll` to the debug and release output folders of your project respectively\n\n## API\nAll the available API calls are documented here:<br/>\nhttps://github.com/bombomby/optick/wiki/Optick-API\n\n## Unreal Engine\nOptick provides a special plugin for UE4. Check more detailed documentation here: <br/>\nhttps://github.com/bombomby/optick/wiki/UE4-Optick-Plugin <br/>\nhttps://github.com/bombomby/optick/wiki/UE5-Optick-Plugin <br/>\n![](https://github.com/bombomby/brofiler/blob/gh-pages/images/UE5_OpenOptick.jpg)\n\n## Samples\nRun [GenerateProjects_gpu.bat](https://github.com/bombomby/optick/blob/master/tools/GenerateProjects_gpu.bat) to generate project files. To compile the samples you'll need to install VulkanSDK. Alternatively you could use [GenerateProjects.bat](https://github.com/bombomby/optick/blob/master/tools/GenerateProjects.bat) to generate only minimal solution with ConsoleApp sample.<br/>\nOpen solution `build\\vs2017\\Optick.sln` with generated samples.\n\n| [WindowsD3D12](https://github.com/bombomby/optick/tree/master/samples/WindowsD3D12) | [WindowsVulkan](https://github.com/bombomby/optick/tree/master/samples/WindowsVulkan) | [ConsoleApp](https://github.com/bombomby/optick/tree/master/samples/ConsoleApp) |\n| ---------- | ------------ | ------------- |\n| ![WindowsD3D12](https://optick.dev/images/screenshots/optick/WindowsD3D12.png) | ![WindowsVulkan](https://optick.dev/images/screenshots/optick/WindowsVulkan.png) | ![ConsoleApp](https://optick.dev/images/screenshots/optick/ConsoleApp2.png) |\n| DirectX12 multithreading sample with Optick integration | SaschaWillems's vulkan multithreading sample with Optick integration | Basic ConsoleApp with Optick integration  (Windows, Linux, MacOS) |\n\n## Brofiler\nBrofiler has been renamed into Optick starting from v1.2.0.<br/>\nAll the future development is going under the new name.<br/>\nCheatsheet for upgrading to the new version:\n* `BROFILER_FRAME(\"MainThread\");` => `OPTICK_FRAME(\"MainThread\");`\n* `BROFILER_THREAD(\"WorkerThread\");` => `OPTICK_THREAD(\"WorkerThread\");`\n* `BROFILER_CATEGORY(\"Physics\", Brofiler::Color::Green);` => `OPTICK_CATEGORY(\"Physics\", Optick::Category::Physics);`\n* `BROFILER_EVENT(NAME);` => `OPTICK_EVENT(NAME);`\n* `PROFILE;` => `OPTICK_EVENT();`\n\n## How To Start?\nYou can find a short instruction here:<br/>\nhttps://github.com/bombomby/optick/wiki/How-to-start%3F-(Programmers-Setup)\n\n",
  "stars": 3033,
  "timestamp": "2025-06-27T00:14:31.971382",
  "category": "advanced_patterns"
}