{
  "source": "stackoverflow_expert",
  "url": "https://stackoverflow.com/questions/42009868",
  "type": "expert_qa",
  "content": "Q: How should Task.Run call an async method in VB.NET?\n\nA: <p>Given an asynchronous method that does both CPU and IO work such as:</p>\n\n<pre><code>Public Async Function RunAsync() As Task\n    DoWork()\n    Await networkStream.WriteAsync(buffer, 0, buffer.Length).ConfigureAwait(False)\nEnd Function\n</code></pre>\n\n<h3>Which of the following options is the best way to call that asynchronous method from Task.Run in Visual Basic and why?</h3>\n\n<p>Which is the VB equivalent for C# <code>Task.Run(() =&gt; RunAsync())</code>?</p>\n\n<pre><code>Await Task.Run(Function() RunAsync())\n' or\nAwait Task.Run(Sub() RunAsync())\n</code></pre>\n\n<p>Are the Async/Await keywords within Task.Run necessary or redundant? <a href=\"https://stackoverflow.com/questions/18013523/when-correctly-use-task-run-and-when-just-async-await#comment55192388_18015586\">This comment</a> claims they're redundant, but <a href=\"https://stackoverflow.com/a/25768320/14934\">this answer</a> suggests it might be necessary in certain cases:</p>\n\n<pre><code>Await Task.Run(Async Function()\n                   Await RunAsync()\n               End Function)\n</code></pre>\n\n<p>Is ConfigureAwait useful within Task.Run?</p>\n\n<pre><code>Await Task.Run(Function() RunAsync().ConfigureAwait(False))\n\nAwait Task.Run(Async Function()\n                   Await RunAsync().ConfigureAwait(False)\n               End Function)\n</code></pre>\n\n<p>Which of the above 5 Task.Run options is best practice?</p>\n\n<p>Note: There's a similar question <a href=\"https://stackoverflow.com/q/39071826/14934\">How to call Async Method within Task.Run?</a> but it's for C#, the selected answer has negative votes, and doesn't address ConfigureAwait.</p>\n",
  "score": 14,
  "timestamp": "2025-06-27T00:14:11.376992",
  "category": "expert_solutions"
}