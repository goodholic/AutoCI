{
  "question_id": "csharp_basics_explain_1751912361",
  "question": "[클라우드 서비스 개발 상황] Explain 적절한 C# 기초 문법 focusing on class, variable, method with practical examples.",
  "answer": "Solution:\n# C# Basics\n\n## Variables\n\n```C#\nint number = 10;\nstring name = \"John\";\n```\n\n## Classes\n\n```C#\npublic class Person\n{\n    public string Name { get; set; }\n    public int Age { get; set; }\n\n    public Person(string name, int age)\n    {\n        Name = name;\n        Age = age;\n    }\n\n    public void Introduce()\n    {\n        Console.WriteLine($\"Hello, my name is {Name} and I am {Age} years old.\");\n    }\n}\n```\n\n## Methods\n\n```C#\npublic class Calculator\n{\n    public int Add(int a, int b)\n    {\n        return a + b;\n    }\n}\n```\n\n# Practical Examples\n\n## Class\n\n```C#\npublic class Program\n{\n    public static void Main()\n    {\n        Person john = new Person(\"John\", 25);\n        john.Introduce(); // Output: \"Hello, my name is John and I am 25 years old.\"\n\n        Calculator calculator = new Calculator();\n        int result = calculator.Add(5, 3);\n        Console.WriteLine",
  "model": "deepseek-coder-7b",
  "quality_score": 0.6620511543750762,
  "generation_time": 293.82019329071045,
  "timestamp": "2025-07-08T03:29:19.971172",
  "topic": "C# 기초 문법",
  "language": "english"
}